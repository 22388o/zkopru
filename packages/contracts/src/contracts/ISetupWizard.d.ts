/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from 'bn.js'
import { ContractOptions } from 'web3-eth-contract'
import { EventLog } from 'web3-core'
import { EventEmitter } from 'events'
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from './types'

interface EventOptions {
  filter?: object
  fromBlock?: BlockType
  topics?: string[]
}

export interface ISetupWizard extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions,
  ): ISetupWizard
  clone(): ISetupWizard
  methods: {
    registerVk(
      numOfInputs: number | string | BN,
      numOfOutputs: number | string | BN,
      vk: [
        [number | string | BN, number | string | BN],
        [(number | string | BN)[], (number | string | BN)[]],
        [(number | string | BN)[], (number | string | BN)[]],
        [(number | string | BN)[], (number | string | BN)[]],
        [number | string | BN, number | string | BN][],
      ],
    ): NonPayableTransactionObject<void>

    makeConfigurable(addr: string): NonPayableTransactionObject<void>

    makeUserInteractable(addr: string): NonPayableTransactionObject<void>

    makeCoordinatable(addr: string): NonPayableTransactionObject<void>

    makeChallengeable(
      challengeable: string,
      depositValidator: string,
      headerValidator: string,
      migrationValidator: string,
      utxoTreeValidator: string,
      withdrawalTreeValidator: string,
      nullifierTreeValidator: string,
      txValidator: string,
    ): NonPayableTransactionObject<void>

    makeMigratable(addr: string): NonPayableTransactionObject<void>

    allowMigrants(migrants: string[]): NonPayableTransactionObject<void>

    completeSetup(): NonPayableTransactionObject<void>
  }
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter
  }
}
