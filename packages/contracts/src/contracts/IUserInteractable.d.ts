/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { Contract, ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { ContractEvent, Callback, TransactionObject, BlockType } from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export class IUserInteractable extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): IUserInteractable;
  methods: {
    deposit(
      note: number | string,
      amount: number | string,
      fee: number | string,
      pubKey: (number | string)[]
    ): TransactionObject<void>;

    withdraw(
      amount: number | string,
      proofHash: string | number[],
      rootIndex: number | string,
      leafIndex: number | string,
      siblings: (number | string)[]
    ): TransactionObject<void>;

    withdrawUsingSignature(
      amount: number | string,
      to: string,
      proofHash: string | number[],
      rootIndex: number | string,
      leafIndex: number | string,
      siblings: (number | string)[],
      v: number | string,
      r: string | number[],
      s: string | number[]
    ): TransactionObject<void>;
  };
  events: {
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
